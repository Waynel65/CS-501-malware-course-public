#include <windows.h>
#include <stdio.h>

//TODO: test this in a c file

BOOL PrintFileContents(char* filename)
{ 
    // filename = a valid null terminated C string
    HANDLE hFile;
    DWORD dwFileSize;
    char *readBuffer;
    BOOL readSuccess;
    // DWORD numBytesRead;
    DWORD numBytesRead;
    // DWORD error = GetLastError();

    hFile = CreateFileA(filename, GENERIC_READ, FILE_SHARE_READ,
                        NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL,
                        NULL);
    
    if (hFile == INVALID_HANDLE_VALUE)
    {
        printf("unable to open the file!\n");
        return FALSE;
    }

    dwFileSize = GetFileSize(hFile,NULL);
    readBuffer = (char*)malloc((dwFileSize+1)*sizeof(char)); // +1 for null-terminating character
    if (readBuffer == NULL)
    {
        printf("memory allocation failed\n");
        CloseHandle(hFile);
        return FALSE;
    }

    readSuccess = ReadFile(hFile, readBuffer, dwFileSize+1, &numBytesRead, NULL);
    // might have to change this to ReadFile
    if (!readSuccess)
    {
        printf("unable to read content of file\n");
        CloseHandle(hFile);
        return FALSE;
    }
    
    readBuffer[numBytesRead] = '\0';
    printf("%s", readBuffer);
    CloseHandle(hFile);
    free(readBuffer);
    return TRUE;

}
